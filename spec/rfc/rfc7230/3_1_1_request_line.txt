RFC 7230

3.1.1. Request Line

A request-line begins with a method token, followed by a single space
(SP), the request-target, another single space (SP), the protocol
version, and ends with CRLF.

    request-line = method SP request-target SP HTTP-version CRLF
    
The method token indicates the request method to be performed on the
target resource. The request method is case-sensitive.

    method = token
    
The request methods defined by this specification can be found in
Section 4 of [RFC7231], along with information regarding the HTTP
method registry and considerations for defining new methods.

The request-target identifies the target resource upon which to apply
the request, as defined in Section 5.3.

Recipients typically parse the request-line into its component parts
by splitting on whitespace (see Section 3.5), since no whitespace is
allowed in the three components. Unfortunately, some user agents
fail to properly encode or exclude whitespace found in hypertext
references, resulting in those disallowed characters being sent in a
request-target.

Recipients of an invalid request-line SHOULD respond with either a
400 (Bad Request) error or a 301 (Moved Permanently) redirect with
the request-target properly encoded. A recipient SHOULD NOT attempt
to autocorrect and then process the request without a redirect, since
the invalid request-line might be deliberately crafted to bypass
security filters along the request chain.

HTTP does not place a predefined limit on the length of a
request-line, as described in Section 2.5. A server that receives a
method longer than any that it implements SHOULD respond with a 501
(Not Implemented) status code. A server that receives a
request-target longer than any URI it wishes to parse MUST respond
with a 414 (URI Too Long) status code (see Section 6.5.12 of
[RFC7231]).

Various ad hoc limitations on request-line length are found in
practice. It is RECOMMENDED that all HTTP senders and recipients
support, at a minimum, request-line lengths of 8000 octets.